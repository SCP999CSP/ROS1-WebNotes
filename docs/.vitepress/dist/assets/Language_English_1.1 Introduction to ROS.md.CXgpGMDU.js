import{_ as o,c as t,o as r,af as n,ai as a,aj as s}from"./chunks/framework.BYZYS_oT.js";const g=JSON.parse('{"title":"1.1 ROS Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"Language/English/1.1 Introduction to ROS.md","filePath":"Language/English/1.1 Introduction to ROS.md"}'),i={name:"Language/English/1.1 Introduction to ROS.md"};function c(d,e,l,m,p,u){return r(),t("div",null,[...e[0]||(e[0]=[n('<h1 id="_1-1-ros-introduction" tabindex="-1">1.1 ROS Introduction <a class="header-anchor" href="#_1-1-ros-introduction" aria-label="Permalink to “1.1 ROS Introduction”">​</a></h1><p><strong>Background of ROS</strong></p><blockquote><p>Robots represent a highly complex system implementation. Robot design encompasses mechanical processing, mechanical structure design, hardware design, embedded software design, upper-layer software design... It is the integration of various hardware and software components. It can even be said that robot systems are the culmination of today&#39;s industrial ecosystem.</p></blockquote><p><img src="'+a+'" alt="12前言"></p><blockquote><p>The robot architecture is quite vast and so complex that no individual, organization, or even company can independently complete systematic robot research and development work.</p><p>A more suitable strategy is: <em>let robot developers focus on their areas of expertise, while directly reusing implementations from more specialized R&amp;D teams in other modules. Of course, their own research can also be reused by others.</em> This division of labor based on <strong>&quot;reuse&quot;</strong> follows the principle of <strong>&quot;Don&#39;t reinvent the wheel&quot;</strong>, which can significantly improve the efficiency of robot development. Especially as robot hardware becomes increasingly diverse and software libraries grow larger, the need for this reusability and modular development becomes ever more critical.</p></blockquote><p>Against this backdrop, in <strong>2007</strong>, a robotics company named <strong>Willow Garage</strong> released <em><strong>ROS</strong></em> (Robot Operating System). ROS is a universal software framework for robots designed to enhance the reusability of functional modules. With continuous iteration and improvement of the system, ROS has now become the de facto standard in the field of robotics.</p><p><img src="'+s+'" alt="img"></p>',7)])])}const f=o(i,[["render",c]]);export{g as __pageData,f as default};
