import{_ as r,c as e,o as i,af as o,aD as t}from"./chunks/framework.CZgp8l78.js";const m=JSON.parse('{"title":"2.4 常用命令","description":"","frontmatter":{},"headers":[],"relativePath":"2.4 常用命令.md","filePath":"2.4 常用命令.md"}'),s={name:"2.4 常用命令.md"};function l(n,a,_,p,d,c){return i(),e("div",null,[...a[0]||(a[0]=[o('<h1 id="_2-4-常用命令" tabindex="-1">2.4 常用命令 <a class="header-anchor" href="#_2-4-常用命令" aria-label="Permalink to “2.4 常用命令”">​</a></h1><p>机器人系统中启动的节点少则几个，多则十几个、几十个，不同的节点名称各异，通信时使用话题、服务、消息、参数等等都各不相同，一个显而易见的问题是: 当需要自定义节点和其他某个已经存在的节点通信时，如何获取对方的话题、以及消息载体的格式呢？</p><p>在 ROS 同提供了一些实用的命令行工具，可以用于获取不同节点的各类信息，常用的命令如下:</p><ul><li>rosnode : 操作节点</li><li>rostopic : 操作话题</li><li>rosservice : 操作服务</li><li>rosmsg : 操作msg消息</li><li>rossrv : 操作srv消息</li><li>rosparam : 操作参数</li></ul><hr><h4 id="作用" tabindex="-1"><strong>作用</strong> <a class="header-anchor" href="#作用" aria-label="Permalink to “作用”">​</a></h4><p>和之前介绍的文件系统操作命令比较，文件操作命令是静态的，操作的是磁盘上的文件，而上述命令是动态的，在ROS程序启动后，可以动态的获取运行中的节点或参数的相关信息。</p><h4 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to “案例”">​</a></h4><p>本节将借助于2.1、2.2和2.3的通信实现介绍相关命令的基本使用，并通过练习ROS内置的小海龟例程来强化命令的应用。</p><hr><p><strong>另请参考:</strong></p><ul><li><a href="http://wiki.ros.org/ROS/CommandLineTools" target="_blank" rel="noreferrer">http://wiki.ros.org/ROS/CommandLineTools</a></li></ul><p><img src="'+t+'" alt="img"></p>',13)])])}const f=r(s,[["render",l]]);export{m as __pageData,f as default};
