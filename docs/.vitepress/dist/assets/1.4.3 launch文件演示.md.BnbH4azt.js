import{_ as t,c as l,o as e,af as n}from"./chunks/framework.Dbg6IRTl.js";const d=JSON.parse('{"title":"1.4.3 launch文件演示","description":"","frontmatter":{},"headers":[],"relativePath":"1.4.3 launch文件演示.md","filePath":"1.4.3 launch文件演示.md"}'),o={name:"1.4.3 launch文件演示.md"};function s(i,a,p,u,c,r){return e(),l("div",null,[...a[0]||(a[0]=[n(`<h1 id="_1-4-3-launch文件演示" tabindex="-1">1.4.3 launch文件演示 <a class="header-anchor" href="#_1-4-3-launch文件演示" aria-label="Permalink to “1.4.3 launch文件演示”">​</a></h1><h4 id="_1-需求" tabindex="-1">1.需求 <a class="header-anchor" href="#_1-需求" aria-label="Permalink to “1.需求”">​</a></h4><blockquote><p>一个程序中可能需要启动多个节点，比如:ROS 内置的小乌龟案例，如果要控制乌龟运动，要启动多个窗口，分别启动 <code>roscore</code>、乌龟界面节点、键盘控制节点。如果每次都调用 <code>rosrun</code> 逐一启动，显然效率低下，如何优化?</p></blockquote><p>官方给出的优化策略是使用 launch 文件，可以一次性启动多个 ROS 节点。</p><h4 id="_2-实现" tabindex="-1">2.实现 <a class="header-anchor" href="#_2-实现" aria-label="Permalink to “2.实现”">​</a></h4><ol><li><p>选定功能包右击 ---&gt; 添加 launch 文件夹</p></li><li><p>选定 launch 文件夹右击 ---&gt; 添加 launch 文件</p></li><li><p>编辑 launch 文件内容</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>&lt;launch&gt;</span></span>
<span class="line"><span>    &lt;node pkg=&quot;helloworld&quot; type=&quot;demo_hello&quot; name=&quot;hello&quot; output=&quot;screen&quot; /&gt;</span></span>
<span class="line"><span>    &lt;node pkg=&quot;turtlesim&quot; type=&quot;turtlesim_node&quot; name=&quot;t1&quot;/&gt;</span></span>
<span class="line"><span>    &lt;node pkg=&quot;turtlesim&quot; type=&quot;turtle_teleop_key&quot; name=&quot;key1&quot; /&gt;</span></span>
<span class="line"><span>&lt;/launch&gt;</span></span></code></pre></div><ul><li>node ---&gt; 包含的某个节点</li><li>pkg -----&gt; 功能包</li><li>type ----&gt; 被运行的节点文件</li><li>name --&gt; 为节点命名</li><li>output-&gt; 设置日志的输出目标</li></ul></li><li><p>运行 launch 文件</p><p><code>roslaunch 包名 launch文件名</code></p></li><li><p>运行结果: 一次性启动了多个节点</p></li></ol>`,6)])])}const _=t(o,[["render",s]]);export{d as __pageData,_ as default};
