import{_ as e,c as l,o as i,af as t,aQ as _,aR as r}from"./chunks/framework.BYZYS_oT.js";const d=JSON.parse('{"title":"第 1 章 ROS概述与环境搭建","description":"","frontmatter":{},"headers":[],"relativePath":"Language/中文/1  ROS概述与环境搭建.md","filePath":"Language/中文/1  ROS概述与环境搭建.md"}'),o={name:"Language/中文/1  ROS概述与环境搭建.md"};function s(p,a,S,n,R,O){return i(),l("div",null,[...a[0]||(a[0]=[t('<h1 id="第-1-章-ros概述与环境搭建" tabindex="-1">第 1 章 ROS概述与环境搭建 <a class="header-anchor" href="#第-1-章-ros概述与环境搭建" aria-label="Permalink to “第 1 章 ROS概述与环境搭建”">​</a></h1><p>学习是一个循序渐进的过程，具体到计算机领域的软件开发层面，每当接触一个新的知识模块时，按照一般的步骤，我们会先去了解该模块的相关概念，然后再安装官方软件包，接下来再搭建其集成的开发环境...这些准备工作完毕之后，才算是叩开了新领域的大门。</p><p>学习ROS，我们也是遵循这一流程，本章作为ROS体系的开篇主要内容如下:</p><ul><li>ROS的相关概念</li><li>怎样安装ROS</li><li>如何搭建ROS的集成开发环境</li></ul><p>该章内容学习完毕预期达成的目标如下:</p><ul><li>了解 ROS 概念、设计目标以及发展历程</li><li>能够独立安装并运行 ROS</li><li>能够使用 C++ 或 Python 实现 ROS 版本的 HelloWorld</li><li>能够搭建 ROS 的集成开发环境</li><li>了解 ROS 架构设计</li></ul><p>案例演示：</p><p>1.ROS安装成功后,可以运行内置案例:该案例是通过键盘控制乌龟运动<img src="'+_+'" alt="img">2.集成开发环境使用了 VScode，可以提高开发效率</p><p><img src="'+r+'" alt="img"></p>',9)])])}const m=e(o,[["render",s]]);export{d as __pageData,m as default};
