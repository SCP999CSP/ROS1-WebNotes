import{_ as r,c as a,o as t,af as l,ap as i}from"./chunks/framework.D4kPR_Qw.js";const S=JSON.parse('{"title":"2.2.1 服务通信理论模型","description":"","frontmatter":{},"headers":[],"relativePath":"2.2.1 服务通信理论模型.md","filePath":"2.2.1 服务通信理论模型.md"}'),n={name:"2.2.1 服务通信理论模型.md"};function s(_,e,o,p,c,h){return t(),a("div",null,[...e[0]||(e[0]=[l('<h1 id="_2-2-1-服务通信理论模型" tabindex="-1">2.2.1 服务通信理论模型 <a class="header-anchor" href="#_2-2-1-服务通信理论模型" aria-label="Permalink to “2.2.1 服务通信理论模型”">​</a></h1><p>服务通信较之于话题通信更简单些，理论模型如下图所示，该模型中涉及到三个角色:</p><ul><li>ROS master(管理者)</li><li>Server(服务端)</li><li>Client(客户端)</li></ul><p>ROS Master 负责保管 Server 和 Client 注册的信息，并匹配话题相同的 Server 与 Client ，帮助 Server 与 Client 建立连接，连接建立后，Client 发送请求信息，Server 返回响应信息。</p><p><img src="'+i+'" alt="jpg"></p><p>整个流程由以下步骤实现:</p><h4 id="_0-server注册" tabindex="-1">0.Server注册 <a class="header-anchor" href="#_0-server注册" aria-label="Permalink to “0.Server注册”">​</a></h4><p>Server 启动后，会通过RPC在 ROS Master 中注册自身信息，其中包含提供的服务的名称。ROS Master 会将节点的注册信息加入到注册表中。</p><h4 id="_1-client注册" tabindex="-1">1.Client注册 <a class="header-anchor" href="#_1-client注册" aria-label="Permalink to “1.Client注册”">​</a></h4><p>Client 启动后，也会通过RPC在 ROS Master 中注册自身信息，包含需要请求的服务的名称。ROS Master 会将节点的注册信息加入到注册表中。</p><h4 id="_2-ros-master实现信息匹配" tabindex="-1">2.ROS Master实现信息匹配 <a class="header-anchor" href="#_2-ros-master实现信息匹配" aria-label="Permalink to “2.ROS Master实现信息匹配”">​</a></h4><p>ROS Master 会根据注册表中的信息匹配Server和 Client，并通过 RPC 向 Client 发送 Server 的 <strong>TCP</strong> 地址信息。</p><h4 id="_3-client发送请求" tabindex="-1">3.Client发送请求 <a class="header-anchor" href="#_3-client发送请求" aria-label="Permalink to “3.Client发送请求”">​</a></h4><p>Client 根据步骤2 响应的信息，使用 TCP 与 Server 建立网络连接，并发送请求数据。</p><h4 id="_4-server发送响应" tabindex="-1">4.Server发送响应 <a class="header-anchor" href="#_4-server发送响应" aria-label="Permalink to “4.Server发送响应”">​</a></h4><p>Server 接收、解析请求的数据，并产生响应结果返回给 Client。</p><blockquote><p>注意:</p><p>1.客户端请求被处理时，需要保证服务器已经启动；</p><p>2.服务端和客户端都可以存在多个。</p></blockquote>',17)])])}const C=r(n,[["render",s]]);export{S as __pageData,C as default};
