import{_ as a,c as i,o as n,af as e}from"./chunks/framework.BYZYS_oT.js";const c=JSON.parse('{"title":"1.3.2 HelloWorld","description":"","frontmatter":{},"headers":[],"relativePath":"Language/English/1.3.2 HelloWorld.md","filePath":"Language/English/1.3.2 HelloWorld.md"}'),l={name:"Language/English/1.3.2 HelloWorld.md"};function t(p,s,h,r,o,d){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="_1-3-2-helloworld" tabindex="-1">1.3.2 HelloWorld <a class="header-anchor" href="#_1-3-2-helloworld" aria-label="Permalink to “1.3.2 HelloWorld”">​</a></h1><p>本节内容基于1.3.1，假设你已经创建了ROS的工作空间，并且创建了ROS的功能包，那么就可以进入核心步骤了，使用Python编写程序实现：</p><h4 id="_1-进入-ros-包添加-scripts-目录并编辑-python-文件" tabindex="-1">1.进入 ros 包添加 scripts 目录并编辑 python 文件 <a class="header-anchor" href="#_1-进入-ros-包添加-scripts-目录并编辑-python-文件" aria-label="Permalink to “1.进入 ros 包添加 scripts 目录并编辑 python 文件”">​</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>cd ros包</span></span>
<span class="line"><span>mkdir scripts</span></span></code></pre></div><p>新建 python 文件: (文件名自定义)</p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#! /usr/bin/env python</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Python 版 HelloWorld</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rospy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rospy.init_node(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rospy.loginfo(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello World!!!!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="_2-为-python-文件添加可执行权限" tabindex="-1">2.为 python 文件添加可执行权限 <a class="header-anchor" href="#_2-为-python-文件添加可执行权限" aria-label="Permalink to “2.为 python 文件添加可执行权限”">​</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>chmod +x 自定义文件名.py</span></span></code></pre></div><h4 id="_3-编辑-ros-包下的-camkelist-txt-文件" tabindex="-1">3.编辑 ros 包下的 CamkeList.txt 文件 <a class="header-anchor" href="#_3-编辑-ros-包下的-camkelist-txt-文件" aria-label="Permalink to “3.编辑 ros 包下的 CamkeList.txt 文件”">​</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>catkin_install_python(PROGRAMS scripts/自定义文件名.py</span></span>
<span class="line"><span>  DESTINATION \${CATKIN_PACKAGE_BIN_DESTINATION}</span></span>
<span class="line"><span>)</span></span></code></pre></div><h4 id="_4-进入工作空间目录并编译" tabindex="-1">4.进入工作空间目录并编译 <a class="header-anchor" href="#_4-进入工作空间目录并编译" aria-label="Permalink to “4.进入工作空间目录并编译”">​</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>cd 自定义空间名称</span></span>
<span class="line"><span>catkin_make</span></span></code></pre></div><h4 id="_5-进入工作空间目录并执行" tabindex="-1">5.进入工作空间目录并执行 <a class="header-anchor" href="#_5-进入工作空间目录并执行" aria-label="Permalink to “5.进入工作空间目录并执行”">​</a></h4><p><strong>先启动命令行1：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>roscore</span></span></code></pre></div><p><strong>再启动命令行2：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>cd 工作空间</span></span>
<span class="line"><span>source ./devel/setup.bash</span></span>
<span class="line"><span>rosrun 包名 自定义文件名.py</span></span></code></pre></div><p>输出结果:<code>Hello World!!!!</code></p>`,18)])])}const g=a(l,[["render",t]]);export{c as __pageData,g as default};
