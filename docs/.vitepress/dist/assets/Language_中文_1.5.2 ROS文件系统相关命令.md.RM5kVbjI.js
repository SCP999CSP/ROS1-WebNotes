import{_ as e,c as r,o as s,af as i}from"./chunks/framework.BYZYS_oT.js";const _=JSON.parse('{"title":"1.5.2 ROS文件系统相关命令","description":"","frontmatter":{},"headers":[],"relativePath":"Language/中文/1.5.2 ROS文件系统相关命令.md","filePath":"Language/中文/1.5.2 ROS文件系统相关命令.md"}'),o={name:"Language/中文/1.5.2 ROS文件系统相关命令.md"};function t(n,a,l,h,p,c){return s(),r("div",null,[...a[0]||(a[0]=[i('<h1 id="_1-5-2-ros文件系统相关命令" tabindex="-1">1.5.2 ROS文件系统相关命令 <a class="header-anchor" href="#_1-5-2-ros文件系统相关命令" aria-label="Permalink to “1.5.2 ROS文件系统相关命令”">​</a></h1><p>ROS 的文件系统本质上都还是操作系统文件，我们可以使用Linux命令来操作这些文件，不过，在ROS中为了更好的用户体验，ROS专门提供了一些类似于Linux的命令，这些命令较之于Linux原生命令，更为简介、高效。文件操作，无外乎就是增删改查与执行等操作，接下来，我们就从这五个维度，来介绍ROS文件系统的一些常用命令。</p><h4 id="_1-增" tabindex="-1">1.增 <a class="header-anchor" href="#_1-增" aria-label="Permalink to “1.增”">​</a></h4><p>catkin_create_pkg 自定义包名 依赖包 === 创建新的ROS功能包</p><p>sudo apt install xxx === 安装 ROS功能包</p><h4 id="_2-删" tabindex="-1">2.删 <a class="header-anchor" href="#_2-删" aria-label="Permalink to “2.删”">​</a></h4><p>sudo apt purge xxx ==== 删除某个功能包</p><h4 id="_3-查" tabindex="-1">3.查 <a class="header-anchor" href="#_3-查" aria-label="Permalink to “3.查”">​</a></h4><p>rospack list === 列出所有功能包</p><p>rospack find 包名 === 查找某个功能包是否存在，如果存在返回安装路径</p><p>roscd 包名 === 进入某个功能包</p><p>rosls 包名 === 列出某个包下的文件</p><p>apt search xxx === 搜索某个功能包</p><h4 id="_4-改" tabindex="-1">4.改 <a class="header-anchor" href="#_4-改" aria-label="Permalink to “4.改”">​</a></h4><p>rosed 包名 文件名 === 修改功能包文件</p><p>需要安装 vim</p><p>**比如:**rosed turtlesim Color.msg</p><h4 id="_5-执行" tabindex="-1">5.执行 <a class="header-anchor" href="#_5-执行" aria-label="Permalink to “5.执行”">​</a></h4><h5 id="_5-1roscore" tabindex="-1">5.1roscore <a class="header-anchor" href="#_5-1roscore" aria-label="Permalink to “5.1roscore”">​</a></h5><p><strong>roscore ===</strong> 是 ROS 的系统先决条件节点和程序的集合， 必须运行 roscore 才能使 ROS 节点进行通信。</p><p>roscore 将启动:</p><ul><li>ros master</li><li>ros 参数服务器</li><li>rosout 日志节点</li></ul><p>用法:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>roscore</span></span></code></pre></div><p>或(指定端口号)</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>roscore -p xxxx</span></span></code></pre></div><h5 id="_5-2rosrun" tabindex="-1">5.2rosrun <a class="header-anchor" href="#_5-2rosrun" aria-label="Permalink to “5.2rosrun”">​</a></h5><p><strong>rosrun 包名 可执行文件名</strong> === 运行指定的ROS节点</p><p><strong>比如:</strong><code>rosrun turtlesim turtlesim_node</code></p><h5 id="_5-3roslaunch" tabindex="-1">5.3roslaunch <a class="header-anchor" href="#_5-3roslaunch" aria-label="Permalink to “5.3roslaunch”">​</a></h5><p><strong>roslaunch 包名 launch文件名</strong> === 执行某个包下的 launch 文件</p>',31)])])}const u=e(o,[["render",t]]);export{_ as __pageData,u as default};
