import{_ as o,c as e,o as r,af as a,ag as s,ah as _}from"./chunks/framework.Dbg6IRTl.js";const d=JSON.parse('{"title":"1.1 ROS简介","description":"","frontmatter":{},"headers":[],"relativePath":"1.1 ROS简介.md","filePath":"1.1 ROS简介.md"}'),n={name:"1.1 ROS简介.md"};function p(c,t,i,l,m,g){return r(),e("div",null,[...t[0]||(t[0]=[a('<h1 id="_1-1-ros简介" tabindex="-1">1.1 ROS简介 <a class="header-anchor" href="#_1-1-ros简介" aria-label="Permalink to “1.1 ROS简介”">​</a></h1><p><strong>ROS诞生背景</strong></p><blockquote><p>机器人是一种高度复杂的系统性实现，机器人设计包含了机械加工、机械结构设计、硬件设计、嵌入式软件设计、上层软件设计....是各种硬件与软件集成，甚至可以说机器人系统是当今工业体系的集大成者。</p></blockquote><p><img src="'+s+'" alt="12前言"></p><blockquote><p>机器人体系是相当庞大的，其复杂度之高，以至于没有任何个人、组织甚至公司能够独立完成系统性的机器人研发工作。</p><p>一种更合适的策略是：<em>让机器人研发者专注于自己擅长的领域，其他模块则直接复用相关领域更专业研发团队的实现，当然自身的研究也可以被他人继续复用。</em>这种基于&quot;复用&quot;的分工协作，遵循了<strong>不重复发明轮子</strong>的原则，显然是可以大大提高机器人的研发效率的，尤其是随着机器人硬件越来越丰富，软件库越来越庞大，这种复用性和模块化开发需求也愈发强烈。</p></blockquote><p>在此大背景下，于 <strong>2007</strong> 年，一家名为 <strong>柳树车库（Willow Garage）</strong>的机器人公司发布了 <em><strong>ROS</strong></em>(机器人操作系统)，ROS是一套机器人通用软件框架，可以提升功能模块的复用性，并且随着该系统的不断迭代与完善，如今 ROS 已经成为机器人领域的事实标准。</p><p><img src="'+_+'" alt="img"></p>',7)])])}const O=o(n,[["render",p]]);export{d as __pageData,O as default};
